version: "3.9"

networks:
  dev:
    driver: bridge
services:
  # nginx:
  #   image: nginx:stable-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - './nginx.conf:/etc/nginx/nginx.conf'
  #   depends_on:
  #     - auth_db
  #   networks:
  #     - dev
    
  auth_db:
    image: postgres:15
    environment:
      POSTGRES_DB: "auth_DB"
      POSTGRES_USER: "amogus"
      POSTGRES_PASSWORD: "1234"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - auth_data:/var/lib/postgresql/data/pgdata
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "2751:5432"
    networks:
      - dev

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U amogus -d auth_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

          
  auth:
    build:
       context: ./auth_server
       dockerfile: Dockerfile
    container_name: server-auth
    hostname: server-auth
    ports:
       - "8080:8080"
    networks:
       - dev
  redis:
    image: redis:7-alpine
    container_name: redis-container
    ports:
      - "6379:6379" # Проброс порта
    volumes:
      - redis-data:/data # Для сохранения данных
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "debug" ]
    restart: unless-stopped
    networks:
      - dev
volumes:
  auth_data:
  redis-data:

